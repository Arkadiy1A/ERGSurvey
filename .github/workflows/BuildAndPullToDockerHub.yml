name: Build and Deploy
on:
  push:
    branches:
      - main
jobs:
  buildFrontApp:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.x'
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build frontApp application
        run: cd front && env GOOS=linux CGO_ENABLED=0 go build -o frontApp ./cmd/web
      - name: Build frontApp Docker image
        run: cd front && docker build -t arkadiyagapov/erg-survey-front:1.0.15 . -f erg.survey.front.dockerfile
      - name: Push frontApp to DockerHUB
        run: docker push arkadiyagapov/erg-survey-front:1.0.15

  buildBackApp:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.x'
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build frontApp application
        run: cd back && env GOOS=linux CGO_ENABLED=0 go build -o backApp ./app
      - name: Build frontApp Docker image
        run: cd back && docker build -t arkadiyagapov/erg-survey-back:1.0.5 . -f erg.survey.back.dockerfile
      - name: Push frontApp to DockerHUB
        run: docker push arkadiyagapov/erg-survey-back:1.0.5

  buildCaddy:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.x'
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build Caddy Docker image
        run: cd project && docker build -t arkadiyagapov/erg-survey-caddy:1.0.20 . -f caddy.prod.dockerfile
      - name: Push Caddy to DockerHUB
        run: docker push arkadiyagapov/erg-survey-caddy:1.0.20

  deploy:
    needs: [buildFrontApp, buildBackApp, buildCaddy]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Copy Docker Compose to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST_WORKER_1 }}
          username: ${{ secrets.USERNAME_WORKER_1 }}
          key: ${{ secrets.SSH_PRIVATE_KEY_LING_1 }}
          source: ./project/docker-compose-hub.yml
          target: /home/deployer/
      - name: Deploy application
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_WORKER_1 }}
          username: ${{ secrets.USERNAME_WORKER_1 }}
          key: ${{ secrets.SSH_PRIVATE_KEY_LING_1 }}
          script: |
            docker compose -f /home/deployer/project/docker-compose-hub.yml down
            docker compose -f /home/deployer/project/docker-compose-hub.yml up -d

